spring:
  application:
    name: Journal Application

  data:
    mongodb:
      uri: ${MONGO_URI}
      database: ${MONGO_DATABASE}
      auto-index-creation: true

    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      username: ${REDIS_USERNAME}
      password: ${REDIS_PASSWORD}

  main:
    allow-circular-references: true

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: weekly-sentiment-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
            json:
                trusted:
                  packages: com.myproject.journalApp.model
    properties:
      security:
        protocol: SASL_SSL
      sasl:
        mechanism: PLAIN
        jaas:
          config: org.apache.kafka.common.security.plain.PlainLoginModule required username='57E7PTVK6AJIJ5VY' password='cflt9X4Gg5m6FJFQ5eI4+Nx5DllmXSeBNRrjy2K0hFtMK/k9gAmnSe1nBU9xKXfw';
      session:
        timeout:
          ms: 45000


server:
  port: 8080
#  servlet:
#    context-path: /journal

weather:
  api:
    key: ${WEATHER_API_KEY}

quote:
  api:
    key: ${QUOTE_API_KEY}